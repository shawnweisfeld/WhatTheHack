// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RockPaperScissorsBoom.Server.Data;

namespace RockPaperScissorsBoom.Server.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RockPaperScissor.Core.Model.BotRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CompetitorId");

                    b.Property<Guid?>("GameRecordId");

                    b.Property<int>("Losses");

                    b.Property<int>("Ties");

                    b.Property<int>("Wins");

                    b.HasKey("Id");

                    b.HasIndex("CompetitorId");

                    b.HasIndex("GameRecordId");

                    b.ToTable("BotRecords");
                });

            modelBuilder.Entity("RockPaperScissor.Core.Model.Competitor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BotType");

                    b.Property<string>("Name");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Competitors");
                });

            modelBuilder.Entity("RockPaperScissor.Core.Model.GameRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("GameDate");

                    b.HasKey("Id");

                    b.ToTable("GameRecords");
                });

            modelBuilder.Entity("RockPaperScissor.Core.Model.BotRecord", b =>
                {
                    b.HasOne("RockPaperScissor.Core.Model.Competitor", "Competitor")
                        .WithMany()
                        .HasForeignKey("CompetitorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RockPaperScissor.Core.Model.GameRecord", "GameRecord")
                        .WithMany("BotRecords")
                        .HasForeignKey("GameRecordId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
